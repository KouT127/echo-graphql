// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graph

import (
	"github.com/KouT127/gin-sample/backend/domain/model/task"
	"github.com/KouT127/gin-sample/backend/domain/model/user"
)

type Connection interface {
	IsConnection()
}

type Edge interface {
	IsEdge()
}

type Node interface {
	IsNode()
}

type PageInfo struct {
	StartCursor     *string `json:"startCursor"`
	EndCursor       *string `json:"endCursor"`
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
}

type TaskConnection struct {
	TotalCount int         `json:"totalCount"`
	Edges      []*TaskEdge `json:"edges"`
	PageInfo   *PageInfo   `json:"pageInfo"`
}

func (TaskConnection) IsConnection() {}

type TaskEdge struct {
	Cursor string     `json:"cursor"`
	Node   *task.Task `json:"node"`
}

func (TaskEdge) IsEdge() {}

type TaskInput struct {
	Title       string `json:"title"`
	Description string `json:"description"`
	UserID      string `json:"userId"`
}

type UserConnection struct {
	TotalCount int         `json:"totalCount"`
	Edges      []*UserEdge `json:"edges"`
	PageInfo   *PageInfo   `json:"pageInfo"`
}

func (UserConnection) IsConnection() {}

type UserEdge struct {
	Cursor string     `json:"cursor"`
	Node   *user.User `json:"node"`
}

func (UserEdge) IsEdge() {}

type UserInput struct {
	Name   string `json:"name"`
	Gender string `json:"gender"`
}
